<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cache on Nawaf's Portfolio</title><link>https://chowdhurynawaf.github.io/en/tags/cache/</link><description>Recent content in Cache on Nawaf's Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 20 Jan 2024 08:01:10 +0600</lastBuildDate><atom:link href="https://chowdhurynawaf.github.io/en/tags/cache/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimizing Cache Management Strategy in Beeda</title><link>https://chowdhurynawaf.github.io/en/posts/cache-management-strategy-in-beeda/</link><pubDate>Sat, 20 Jan 2024 08:01:10 +0600</pubDate><guid>https://chowdhurynawaf.github.io/en/posts/cache-management-strategy-in-beeda/</guid><description>&lt;p>To deliver a fast and seamless user experience, every application requires an effective caching system. Without caching, repeatedly downloading assets can consume significant resources and cause delays in loading times. To overcome this, developers use a variety of caching strategies, including &lt;strong>disk caching&lt;/strong>, &lt;strong>LRU (Least Recently Used) caching&lt;/strong>, &lt;strong>database caching&lt;/strong>, and others, to enhance performance and minimize latency.&lt;/p>
&lt;hr>
&lt;h3 id="problem">Problem:&lt;/h3>
&lt;p>In the &lt;strong>Beeda User&lt;/strong> app, effectively handling media assets like images, Lottie animations, and videos was essential for ensuring a fast and seamless user experience. Each type of media asset comes with its own specific needs and challenges when it comes to caching and optimization:&lt;/p></description></item></channel></rss>